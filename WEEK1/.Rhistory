browserdata <- read.csv("../Data/web-browsers.csv")
browserdata <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/web-browsers.csv")
browse(browserdata)
view(browserdata)
sum(browserdata)
summary(browserdata)
mean(browser$spend)
mean(browserdata$spend)
var(browserdata$spend)
sqrt(var(browser$spend)
sqrt(var(browserdata$spend)
sqrtvar(browserdata$spend)
var_browser <- var(browserdata$spend)
var_browserspend<- var(browserdata$spend)
drop var_browser
drop(var_browser)
sqrt(var_browserspend)
sqrt(var_browserspend)/1000
mean(browserdata$spend)
var_browserspend<- var(browserdata$spend)/10000
#we divide by 1000 bc we have 10k households
sqrt(var_browserspend)
var_browserspend<- var(browserdata$spend)/10000
var_browserspend
#we divide by 1000 bc we have 10k households
sqrt(var_browserspend)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
#we divide by 1000 bc we have 10k households
sqrt(var_browserspend)
sd(mub)
#we divide by 1000 bc we have 10k households
sqrt(var_browserspend)
sd(mub)
sd(mub)
sd(mub)
sd(mub)
sd(mub)
sd(mub)
sd(mub)
#we divide by 1000 bc we have 10k households
sqrt(var_browserspend)
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b)[1:10]
sort(samp_b)[1:10]
sort(samp_b)[1:10]
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b)[1:10]
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b)[1:10]
B2 <- 1000
mub2 <- c()
for (b2 in 1:1000){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b2)[1:10]
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b2)[1:10]
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b2)[1:10]
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b2)[1:10]
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
#however if we bootstrap, the standard deviation (and the variance) change each time because the samples are randomly selected each time
sort(samp_b2)[1:10]
sort(samp_b2)[1:10]
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B2 <- 100
mub2 <- c()
for (b2 in 1:100){
samp_b2 <- sample.int(nrow(browserdata), replace=TRUE)
mub2 <- c(mub2, mean(browserdata$spend[samp_b2]))
}
sd(mub2)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
B3 <- 10
mub3 <- c()
for (b3 in 1:10){
samp_b3 <- sample.int(nrow(browserdata), replace=TRUE)
mub3 <- c(mub3, mean(browserdata$spend[samp_b3]))
}
sd(mub3)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browser$spend), sd = sqrt(var(browser$spend)/1e4))
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browser$spend), sd = sqrt(var(browser$spend)/1e4))
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browser$spend), sd = sqrt(var(browser$spend)/1e4))
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2]) * length(mub)
#can you explain why we need each term in the last expression?
lines(xfit, yfit, col = "red", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2]) * length(mub)
#can you explain why we need each term in the last expression?
lines(xfit, yfit, col = "red", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2]) * length(mub)
#can you explain why we need each term in the last expression?
lines(xfit, yfit, col = "lightblue", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2]) * length(mub)
#can you explain why we need each term in the last expression?
lines(xfit, yfit, col = "pink", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2]) * length(mub)
#can you explain why we need each term in the last expression?
lines(xfit, yfit, col = "black", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * length(mub)
#can you explain why we need each term in the last expression?
#with this line we need to scale the yfit line
lines(xfit, yfit, col = "black", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2])
#can you explain why we need each term in the last expression?
lines(xfit, yfit, col = "black", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2])
lines(xfit, yfit, col = "black", lwd = 2)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * length(mub)
lines(xfit, yfit, col = "black", lwd = 2)
B <- 1000
betas <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
reg_b <- glm(log(spend) ~ broadband + anychildren, data=browserdata[samp_b,])
betas <- rbind(betas, coef(reg_b))
}; head(betas, n=3)
B <- 1000
betas <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=TRUE)
reg_b <- glm(log(spend) ~ broadband + anychildren, data=browserdata[samp_b,])
betas <- rbind(betas, coef(reg_b))
}; head(betas, n=3)
