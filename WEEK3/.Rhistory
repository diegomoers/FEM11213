col="blue",
lwd=2)
lines(density(mub2), col="red", lwd=2)
lines(density(mub3), col="green", lwd=2)
legend("topright",
legend=c("B=1000", "B=100", "B=10"),
col=c("blue", "red", "green"),
lwd=2)
browserdata <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/web-browsers.csv")
summary(browserdata)
summary(browserdata)
setwd("~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2")
png("bootstrap_distributions.png", width=700, height=500)
plot(density(mub),
main="Bootstrap Distribution Comparison",
xlab="Mean Spend",
ylab="Density",
col="blue",
lwd=2)
lines(density(mub2), col="red", lwd=2)
lines(density(mub3), col="green", lwd=2)
legend("topright",
legend=c("B=1000", "B=100", "B=10"),
col=c("blue", "red", "green"),
lwd=2))
png("bootstrap_distributions.png", width=700, height=500)
plot(density(mub),
main="Bootstrap Distribution Comparison",
xlab="Mean Spend",
ylab="Density",
col="blue",
lwd=2)
lines(density(mub2), col="red", lwd=2)
lines(density(mub3), col="green", lwd=2)
legend("topright",
legend=c("B=1000", "B=100", "B=10"),
col=c("blue", "red", "green"),
lwd=2)
png("FEM11213/WEEK2/bootstrap_distributions.png", width=700, height=500)
plot(density(mub),
main="Bootstrap Distribution",
xlab="Mean",
ylab="Density",
col="blue",
lwd=2)
lines(density(mub2), col="red", lwd=2)
lines(density(mub3), col="green", lwd=2)
legend("topright",
legend=c("B=1000", "B=100", "B=10"),
col=c("blue", "red", "green"),
lwd=2)
png("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/bootstrap_distributions.png", width=700, height=500)
plot(density(mub),
main="Bootstrap Distribution",
xlab="Mean",
ylab="Density",
col="blue",
lwd=2)
lines(density(mub2), col="red", lwd=2)
lines(density(mub3), col="green", lwd=2)
legend("topright",
legend=c("B=1000", "B=100", "B=10"),
col=c("blue", "red", "green"),
lwd=2)
png("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/bootstrap_distributions.png", width=700, height=500)
plot(density(mub),
main="Bootstrap Distribution",
xlab="Mean",
ylab="Density",
col="blue",
lwd=2)
lines(density(mub2), col="red", lwd=2)
lines(density(mub3), col="green", lwd=2)
legend("topright",
legend=c("B=1000", "B=100", "B=10"),
col=c("blue", "red", "green"),
lwd=2)
dev.off()
png("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/hdist1.png", width=700, height=500)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2]) * length(mub)
#QUESTION FROM SLIDES can you explain why we need each term in the last expression?
#to find out i ran the same code, but removed diff(h$mids[1:2]) or length(mub) to see what happens to the line each time
lines(xfit, yfit, col = "black", lwd = 2)
dev.off()
png("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/hdist2.png", width=700, height=500)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * length(mub)
lines(xfit, yfit, col = "black", lwd = 2)
dev.off()
png("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/hdist3.png", width=700, height=500)
h <- hist(mub)
xfit <- seq(min(mub), max(mub), length = 40)
yfit <- dnorm(xfit, mean = mean(browserdata$spend), sd = sqrt(var(browserdata$spend)/1e4))
yfit <- yfit * diff(h$mids[1:2])
lines(xfit, yfit, col = "black", lwd = 2)
dev.off()
spendy <- glm(log(spend) ~ . -id, data=browser)
browserdata <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/web-browsers.csv")
summary(browserdata)
spendy <- glm(log(spend) ~ . -id, data=browser)
spendy <- glm(log(spend) ~ . -id, data=browser)
browser <- read.csv("../Data/web-browsers.csv")
browser <- read.csv("../Data/web-browsers.csv")
spendy <- glm(log(spend) ~ . -id, data=browserdata)
round(summary(spendy)$coef,2)
pval <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank <- rank(pval)
reject <- ifelse(pval< (0.1/9)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHAlgoExample.png",
width=600, height=350)
plot(pvalrank, pval, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank, (0.1/9)*pvalrank)
plot(pvalrank, pval, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank, (0.1/9)*pvalrank)
pval2 <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank2 <- rank(pval2)
reject <- ifelse(pval2< (0.05/9)*pvalrank2, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2.png",
width=600, height=350)
plot(pvalrank2, pval2, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank2, (0.05/9)*pvalrank2)
spendy <- glm(log(spend) ~ . -id, data=browserdata)
round(summary(spendy)$coef,2)
pval <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank <- rank(pval)
reject <- ifelse(pval< (0.1/9)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHAl.png",
width=600, height=350)
plot(pvalrank, pval, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank, (0.1/9)*pvalrank)
#when q= 0.1, we have a very lenient criterion. in my code, i want to see what happens if we make the q value more strict, and how it shows on the graph
#in the current graph, the line is relatively flat, so we get more coefficients under the line.
pval2 <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank2 <- rank(pval2)
reject <- ifelse(pval2< (0.05/9)*pvalrank2, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2.png",
width=600, height=350)
plot(pvalrank2, pval2, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank2, (0.05/9)*pvalrank2)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHAl.png",
width=600, height=350)
plot(pvalrank, pval, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank, (0.1/9)*pvalrank)
pval2 <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank2 <- rank(pval2)
reject <- ifelse(pval2< (0.05/9)*pvalrank2, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2.png",
width=600, height=350)
plot(pvalrank2, pval2, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank2, (0.05/9)*pvalrank2)
dev.off()
pval <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank <- rank(pval)
reject <- ifelse(pval< (0.1/9)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHAl.png",
width=600, height=350)
plot(pvalrank, pval, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank, (0.1/9)*pvalrank)
dev.off()
#COPIED FROM SLIDES:
spendy <- glm(log(spend) ~ . -id, data=browserdata)
round(summary(spendy)$coef,2)
pval <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank <- rank(pval)
reject <- ifelse(pval< (0.1/9)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1.png",
width=600, height=350)
plot(pvalrank, pval, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank, (0.1/9)*pvalrank)
dev.off()
#when q= 0.1, we have a very lenient criterion. in my code, i want to see what happens if we make the q value more strict, and how it shows on the graph
#in the current graph, the line is relatively flat, so we get more coefficients under the line.
#when q = 0.05
pval2 <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank2 <- rank(pval2)
reject <- ifelse(pval2< (0.05/9)*pvalrank2, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2.png",
width=600, height=350)
plot(pvalrank2, pval2, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank2, (0.05/9)*pvalrank2)
dev.off()
#when q = 0.05
pval3 <- summary(spendy)$coef[-1, "Pr(>|t|)"]
pvalrank3 <- rank(pval3)
reject <- ifelse(pval3< (0.01/9)*pvalrank3, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA3.png",
width=600, height=350)
plot(pvalrank3, pval3, ylab="p-value", xlab="p-value rank", pch=16, col=reject)
lines(pvalrank3, (0.01/9)*pvalrank3)
dev.off()
drop
drop(all)
browserdata <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/semiconductor.csv")
summary(browserdata)
semiConductData <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/semiconductor.csv")
summary(semiConductData)
full <- glm(FAIL ~ ., data=SC, family=binomial)
semiConductData <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/semiconductor.csv")
summary(semiConductData)
full <- glm(FAIL ~ ., data=semiConductData, family=binomial)
pvals <- summary(full)$coef[-1,4] #-1 to drop the intercept
pval <- summary(full)$coef[-1, "Pr(>|t|)"]
pval <- summary(full)$coef[-1,4 "Pr(>|t|)"]
pval <- summary(full)$coef[-1,4, "Pr(>|t|)"]
pval <- summary(full)$coef[-1, "Pr(>|t|)"]
# Get p-values from semiconductor regression (corrected for logistic regression)
pval <- summary(full)$coefficients[-1, 4]  # Column 4 contains p-values
n_predictors <- length(pval)
pvalrank <- rank(pval)
# Create BH plot
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semiconductor.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
#copied from data
semiConductData <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/semiconductor.csv")
summary(semiConductData)
full <- glm(FAIL ~ ., data=semiConductData, family=binomial)
pvals <- summary(full)$coef[-1,4] #-1 to drop the intercept
semiConductData <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/semiconductor.csv")
summary(semiConductData)
full <- glm(FAIL ~ ., data=semiConductData, family=binomial)
pvals <- summary(full)$coef[-1,4] #-1 to drop the intercept
pval <- summary(full)$coef[-1, "Pr(>|t|)"]
pval <- summary(full)$coef[-1, "Pr(>|t|)"]
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semiconductor.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semiconductor.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
# Get p-values from semiconductor regression (corrected for logistic regression)
pval <- summary(full)$coefficients[-1, 4]  # Column 4 contains p-values
n_predictors <- length(pval)
pvalrank <- rank(pval)
# Create BH plot
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semiconductor.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
pval <- summary(full)$coefficients[-1, 4]  # Column 4 contains p-values
n_predictors <- length(pval)
pvalrank <- rank(pval)
# Create BH plot
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semiconductor.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
print(paste("Number of rejected hypotheses:", num_rejected))
num_rejected <- sum(reject == 2)
num_kept <- sum(reject == 1)
print(paste("Number of rejected hypotheses:", num_rejected))
print(paste("Number of kept hypotheses:", num_kept))
print(num_kept)
print(num_kept)
reject <- ifelse(pval < (0.05/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.05/n_predictors)*pvalrank)
dev.off()
print(num_kept)
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
print(num_kept) #when q = 0.1, 176 hypotheses are kept
#testing when q=0.1
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 2)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
print(num_kept) #when q = 0.1, 176 hypotheses are kept
semiConductData <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/semiconductor.csv")
summary(semiConductData)
full <- glm(FAIL ~ ., data=semiConductData, family=binomial)
pval <- summary(full)$coefficients[-1, 4]
n_predictors <- length(pval)
pvalrank <- rank(pval)
#testing when q=0.1
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 2)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
print(num_kept) #when q = 0.1, 176 hypotheses are kept
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
print(num_kept) #when q = 0.1, only
#testing when q=0.05
reject <- ifelse(pval < (0.05/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.05/n_predictors)*pvalrank)
dev.off()
print(num_kept)
#testing when q=0.01
reject <- ifelse(pval < (0.01/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA3_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="Benjamini-Hochberg Analysis: Semiconductor Data")
lines(pvalrank, (0.01/n_predictors)*pvalrank)
dev.off()
print(num_kept)
#testing when q=0.1
reject <- ifelse(pval < (0.1/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA1_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="BH Analysis (for semiconductors)")
lines(pvalrank, (0.1/n_predictors)*pvalrank)
dev.off()
print(num_kept) #when q = 0.1, only 24 hypotheses are rejected.
#testing when q=0.05
reject <- ifelse(pval < (0.05/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="BH Analysis (for semiconductors)")
lines(pvalrank, (0.05/n_predictors)*pvalrank)
dev.off()
print(num_kept) #wwhen q = 0.05, only 24 hypotheses are rejected.
#testing when q=0.01
reject <- ifelse(pval < (0.01/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA3_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="BH Analysis (for semiconductors)")
lines(pvalrank, (0.01/n_predictors)*pvalrank)
dev.off()
print(num_kept) #wwhen q = 0.01, only 4 hypotheses are rejected.
#it's not immediately clear to me what a good criterion for q is. Especially for the semiconducter dataset, with many coefficients, is it really sensible to choose q= 0.01?
#testing when q=0.05
reject <- ifelse(pval < (0.05/n_predictors)*pvalrank, 2, 1)
num_kept <- sum(reject == 1)
png(file="~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK2/BHA2_semicond.png",
width=600, height=350)
plot(pvalrank, pval,
ylab="p-value",
xlab="p-value rank",
pch=16,
col=reject,
main="BH Analysis (for semiconductors)")
lines(pvalrank, (0.05/n_predictors)*pvalrank)
dev.off()
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=FALSE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
browserdata <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/web-browsers.csv")
summary(browserdata)
mean(browserdata$spend)
var_browserspend<- var(browserdata$spend)/10000
var_browserspend
#we divide by 1000 bc we have 10k households
sqrt(var_browserspend)
# so in the frequentist approach, we get a fixed standard deviation of 80.3861
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=FALSE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
B <- 1000
mub <- c()
for (b in 1:1000){
samp_b <- sample.int(nrow(browserdata), replace=FALSE)
mub <- c(mub, mean(browserdata$spend[samp_b]))
}
sd(mub)
setwd("~/Desktop/EUR/BLOK2/Data and HR Analytics/FEM11213/WEEK3")
ojdata <- read.csv("/Users/diegomoers/Desktop/EUR/BLOK2/Data and HR Analytics/Data/oj.csv")
summary(ojdata)
head(ojdata, n=5)
tail(ojdata, n=5)
glm(log(sales) ~ brand + log(price), data=oj)
glm(log(sales) ~ brand + log(price), data=ojdata)
x <- model.matrix(~ brand + log(price), data=oj); head(x); tail(x)
x <- model.matrix(~ brand + log(price), data=ojdata); head(x); tail(x)
df <- data.frame(
brand = c("dominicks", "tropicana", "tropicana", "tropicana", "minute.maid"),
price = c(3.95, 4.10, 3.90, 3.90, 3.50)
)
# Calculate log price
df$log_price <- log(df$price)
# Show the original data
df
# Build the model matrix
mm <- model.matrix(~ brand + log_price, data = df)
mm
View(ojdata)
unique(ojdata$price)
lapply(split(ojdata$price, ojdata$brand), unique)
lapply(split(ojdata$price, ojdata$brand), unique)
tapply(ojdata$price, ojdata$brand, mean)   # For the mean
tapply(ojdata$price, ojdata$brand, range)  # For the range
lm(log(sales) ~ log(price)*brand*feat, data=ojdata)
glm(log(sales) ~ log(price)*brand*feat, data=ojdata)
lm(log(sales) ~ log(price)*brand*feat, data=ojdata)
glm(log(sales) ~ log(price)*brand*feat, data=ojdata)
